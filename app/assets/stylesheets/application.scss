/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
@import "bootstrap";
@import 'font-awesome-sprockets';
@import 'font-awesome';


*{
  font-family: 'Franklin Gothic Medium','Yu Gothic UI',sans-serif;
}

body{
	background: rgb(195,255,251);
	background: linear-gradient(90deg, rgba(195,255,251,1) 0%, rgba(154,242,171,1) 27%, rgba(243,249,159,1) 72%, rgba(254,205,189,1) 100%);
}

// ハンバーガーメニュー
.navbar-dark .navbar-toggler{
  border-color: #006633;
  border-width: 1.8px;
}

// 目次用
.contents-box{
    padding: 0.5em 1em;
    margin: 2em 0;
    color: #474747;
    background: #FFFFFF;/*背景色*/
    border-left: double 7px #4ec4d3;/*左線*/
    border-right: double 7px #4ec4d3;/*右線*/
}

//カードマウスオーバー
.card-hover:hover{
  opacity: 0.8;
  border: 0.6mm red solid;
}

// カレンダー用　日付背景色
.task_amount_0 {
  border-radius: 40px;
}

.task_amount_1 {
  background-color: rgb(253, 128, 191);
  border-radius: 40px;
}
.task_amount_2 {
  background-color: rgb(86, 151, 255);
  border-radius: 40px;
}
.task_amount_3 {
  background-color: rgb(86, 255, 170);
  border-radius: 40px;
}
.task_amount_4 {
  background-color: rgb(255, 187, 86);
  border-radius: 40px;
}
.task_amount_5 {
  background-color: rgb(255, 86, 86);
  border-radius: 40px;
}

// カレンダー用 タグありマーク用
.tag_present_mark{
  width: 10px;
  height: 10px;
  display: inline-block;
  border: thick double;
  border-radius: 40px;
  border-color: darkgreen;
  color: darkgreen;
  background-color: springgreen;
}

// ===================トップページアニメーション用==================
// スタート時は要素自体を透過0にするためのopacity:0;を指定する
.box{
  opacity: 0;
}

// ふわっ
.fadeUp {
animation-name:fadeUpAnime;
animation-duration:0.5s;
animation-fill-mode:forwards;
opacity: 0;
}
@keyframes fadeUpAnime{
  from {
    opacity: 0;
  transform: translateY(100px);
  }

  to {
    opacity: 1;
  transform: translateY(0);
  }
}

/* アニメーションスタートの遅延時間を決めるCSS*/
.delay-time02{
animation-delay: 0.2s;
}

.delay-time04{
animation-delay: 0.4s;
}

.delay-time06{
animation-delay: 0.6s;
}

.delay-time08{
animation-delay: 0.8s;
}

.delay-time10{
animation-delay: 1.0s;
}


// ===================レスポンシブ対応用=====================
// レスポンシブ時には表示しない。通常時には表示する
.none_for_responsive{
  display: block;
}

 // レスポンシブ時のみ表示。通常時には表示しない。
.only_for_responsive{
  display: none;
}

.container_for_forms{
  width: 50%;
}

table{
  // 文字の長さで自動で変わっていくので、画面幅いっぱい以上に伸びるのをmax-widthで防ぐ
  max-width: 100%;
}

select{
  // 文字の長さで自動で変わっていくので、画面幅いっぱい以上に伸びるのをmax-widthで防ぐ
  max-width: 40%;
}

/* スマートフォンサイズ（425px）以下の際に適用される設定 */
@media screen and (max-width:426px) {
  // レスポンシブ時には表示しない。通常時には表示する
  .none_for_responsive{
    display: none;
  }

  // レスポンシブ時のみ表示。通常時には表示しない。
  .only_for_responsive{
    display: block;
  }

  .container_for_forms{
    width: 100%;
  }

  // 表をスクロール可能に
  .table-responsive {
    width: 100%;
    overflow-x: scroll;
  }
}